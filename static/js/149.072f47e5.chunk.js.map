{"version":3,"file":"static/js/149.072f47e5.chunk.js","mappings":"oOAKA,EALqB,CACjBA,KAAM,GACNC,OAAQ,ICDZ,EAAuB,wBAAvB,EAAuD,yBAAvD,EAAwF,yBAAxF,EAAuH,uB,SC2DvH,EAtDsB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACvB,GAA0BC,EAAAA,EAAAA,WAAS,UAAKC,IAAxC,eAAOC,EAAP,KAAcC,EAAd,KAQMC,EAAe,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACdR,EAAgBQ,EAAhBR,KAAMS,EAAUD,EAAVC,MACdH,GAAS,SAAAI,GACP,OAAO,kBAAKA,GAAZ,cAAwBV,EAAOS,GAChC,GACF,EAEOT,EAAiBK,EAAjBL,KAAMC,EAAWI,EAAXJ,OAEd,OACE,kBAAMU,UAAWC,EAAaV,SAhBX,SAAAW,GACnBA,EAAEC,iBACFZ,GAAS,UAAKG,IACdC,GAAS,UAAKF,GACf,EAYC,WACE,uCACA,4BACE,kBAAOO,UAAWC,EAAlB,mBACA,kBACED,UAAWC,EACXG,KAAK,OACLf,KAAK,OACLS,MAAOT,EACPgB,QAAQ,yHACRC,MAAM,yIACNC,SAAUX,EACVY,UAAQ,QAGZ,4BACE,kBAAOR,UAAWC,EAAlB,qBACA,kBACED,UAAWC,EACXG,KAAK,MACLf,KAAK,SACLS,MAAOR,EACPe,QAAQ,yFACRC,MAAM,+FACNC,SAAUX,EACVY,UAAQ,QAGZ,mBAAQR,UAAWC,EAAYG,KAAK,SAApC,2BAKL,ECzDD,EAAwB,sBAAxB,EAAsD,sBCWtD,EATuB,SAAC,GAAsB,IAApBR,EAAmB,EAAnBA,aACxB,OACE,4BACE,kBAAOI,UAAWC,EAAlB,oCACA,kBAAOD,UAAWC,EAAcZ,KAAK,SAASkB,SAAUX,MAG7D,ECTD,EAAuB,4BAAvB,EAAyD,2BCEnDa,EAAe,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,WAChBC,EAD2C,EAAfC,SACTC,KAAI,gBAAGC,EAAH,EAAGA,GAAIzB,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OAC3B,0BACGD,EADH,KACWC,GACT,mBACEU,UAAWC,EACXc,QAAS,kBAAML,EAAWI,EAAjB,EACTV,KAAK,SAHP,sBAFOU,EADkB,IAa7B,OAAO,eAAId,UAAWC,EAAf,SAA6BU,GACrC,EAED,IAEAF,EAAaO,aAAe,CAC1BJ,SAAU,I,sBCvBCK,EAAiB,SAAAC,GAAK,OAAIA,EAAMN,QAAV,EACtBO,EAAsB,SAAC,GAAwB,IAAvBP,EAAsB,EAAtBA,SAAUQ,EAAY,EAAZA,OAC3C,IAAKA,EACD,OAAOR,EAGX,IAAMS,EAAmBD,EAAOE,cAKhC,OAJeV,EAASQ,QAAO,YAC3B,OADyC,EAAX/B,KAClBiC,cAAcC,SAASF,EACtC,GAGJ,ECZYG,EAAY,SAAC,GAAD,SAAEJ,MAAF,ECiEzB,EAlDqB,WACnB,IAAMK,GAAmBC,EAAAA,EAAAA,IAAYP,GAC/BQ,GAAcD,EAAAA,EAAAA,IAAYT,GAC1BG,GAASM,EAAAA,EAAAA,IAAYF,GAErBI,GAAWC,EAAAA,EAAAA,MA4BXC,EAASC,QAAQN,EAAiBO,QAExC,OACE,iCACE,SAAC,EAAD,CAAezC,SArBM,SAAC,GAAsB,IAApBF,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OAChC,GAVkB,SAAAD,GAClB,IAAM4C,EAAiB5C,EAAKiC,cACtBY,EAASP,EAAYQ,MAAK,YAC9B,OAD4C,EAAX9C,KACrBiC,gBAAkBW,CAC/B,IAED,OAAOF,QAAQG,EAChB,CAGKE,CAAY/C,GAEd,OADAgD,MAAM,GAAD,OAAIhD,EAAJ,kCACE,EAGTuC,GAASU,EAAAA,EAAAA,IAAW,CAAEjD,KAAAA,EAAMC,OAAAA,IAC7B,KAeG,SAACiD,EAAD,CAAQzC,MAAOsB,EAAQxB,aATN,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACtB+B,GAASY,EAAAA,EAAAA,GAAU3C,EAAOC,OAC3B,IAQIgC,IACC,SAAC,EAAD,CACEpB,WAhBoB,SAAAI,GAC1Bc,GAASa,EAAAA,EAAAA,IAAc3B,GACxB,EAeOF,SAAUa,MAMnB,C","sources":["components/Phonebook/InitialState.js","webpack://react-homework-template/./src/components/Phonebook/phonebook.module.css?5245","components/Phonebook/PhonebookForm.jsx","webpack://react-homework-template/./src/components/Phonebook/filter.module.css?93e0","components/Phonebook/Filter.jsx","webpack://react-homework-template/./src/components/Phonebook/contacts-list.module.css?3472","components/Phonebook/ContactsList.jsx","components/redux/contacts/contacts-selectors.js","components/redux/filter/filter-selectors.js","components/Pages/ContactsPage.jsx"],"sourcesContent":["const initialState = {\n    name: '',\n    number: ''\n}\n\nexport default initialState;","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"phonebook_form__i7pVp\",\"label\":\"phonebook_label__jJAoi\",\"input\":\"phonebook_input__VJNdZ\",\"btn\":\"phonebook_btn__hf3rN\"};","import { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport initialState from './InitialState';\nimport styles from './phonebook.module.css';\n\nconst PhonebookForm = ({ onSubmit }) => {\n  const [state, setState] = useState({ ...initialState });\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit({ ...state });\n    setState({ ...initialState });\n  };\n\n  const handleChange = ({ target }) => {\n    const { name, value } = target;\n    setState(prevState => {\n      return { ...prevState, [name]: value };\n    });\n  };\n\n  const { name, number } = state;\n\n  return (\n    <form className={styles.form} onSubmit={handleSubmit}>\n      <h2>Phonebook</h2>\n      <div>\n        <label className={styles.label}>Name</label>\n        <input\n          className={styles.input}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          onChange={handleChange}\n          required\n        />\n      </div>\n      <div>\n        <label className={styles.label}>Number</label>\n        <input\n          className={styles.input}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          onChange={handleChange}\n          required\n        />\n      </div>\n      <button className={styles.btn} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nexport default PhonebookForm;\n\nPhonebookForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"filter_label__uJ+Tq\",\"input\":\"filter_input__hGpHy\"};","import PropTypes from 'prop-types';\nimport styles from './filter.module.css';\n\nconst ContactsFilter = ({ handleChange }) => {\n  return (\n    <div>\n      <label className={styles.label}>Find contacts by name</label>\n      <input className={styles.input} name=\"filter\" onChange={handleChange} />\n    </div>\n  );\n};\n\nexport default ContactsFilter;\n\nContactsFilter.propTypes = {\n  handleChange: PropTypes.func.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"contacts-list_list__KK1Lk\",\"btn\":\"contacts-list_btn__uUwxN\"};","import PropTypes from 'prop-types';\nimport styles from './contacts-list.module.css';\n\nconst ContactsList = ({ deleteName, contacts }) => {\n  const contact = contacts.map(({ id, name, number }) => (\n    <li key={id}>\n      {name}: {number}\n      <button\n        className={styles.btn}\n        onClick={() => deleteName(id)}\n        type=\"button\"\n      >\n        Delete\n      </button>\n    </li>\n  ));\n\n  return <ul className={styles.list}>{contact}</ul>;\n};\n\nexport default ContactsList;\n\nContactsList.defaultProps = {\n  contacts: [],\n};\n\nContactsList.propTypes = {\n  deleteName: PropTypes.func.isRequired,\n  contactss: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.number.isRequired,\n    })\n  ),\n};\n","export const getAllContacts = store => store.contacts;\nexport const getFilteredContacts = ({contacts, filter}) => {\n    if (!filter) {\n        return contacts;\n    }\n\n    const normalizedFilter = filter.toLowerCase();\n    const result = contacts.filter(({ name }) => {\n        return name.toLowerCase().includes(normalizedFilter);\n    })\n\n    return result;\n}\n","export const getFilter = ({filter}) => filter;","import { useSelector, useDispatch } from 'react-redux';\n\nimport PhonebookForm from '../Phonebook/PhonebookForm';\nimport Filter from '../Phonebook/Filter';\nimport ContactsList from '../Phonebook/ContactsList';\n\nimport { addContact, deleteContact } from '../redux/contacts/contacts-slice';\nimport { setFilter } from '../redux/filter/filter-slice';\n\nimport {\n  getAllContacts,\n  getFilteredContacts,\n} from '../redux/contacts/contacts-selectors';\nimport { getFilter } from '../redux/filter/filter-selectors';\n\nconst ContactsPage = () => {\n  const filteredContacts = useSelector(getFilteredContacts);\n  const allContacts = useSelector(getAllContacts);\n  const filter = useSelector(getFilter);\n\n  const dispatch = useDispatch();\n\n  const isDublicate = name => {\n    const normalizedName = name.toLowerCase();\n    const result = allContacts.find(({ name }) => {\n      return name.toLowerCase() === normalizedName;\n    });\n\n    return Boolean(result);\n  };\n\n  const handleAddContact = ({ name, number }) => {\n    if (isDublicate(name)) {\n      alert(`${name} is already in contacts list`);\n      return false;\n    }\n\n    dispatch(addContact({ name, number }));\n  };\n\n  const handleDeleteContact = id => {\n    dispatch(deleteContact(id));\n  };\n\n  const handleFilter = ({ target }) => {\n    dispatch(setFilter(target.value));\n  };\n\n  const isName = Boolean(filteredContacts.length);\n\n  return (\n    <>\n      <PhonebookForm onSubmit={handleAddContact} />\n      <Filter value={filter} handleChange={handleFilter} />\n      {isName && (\n        <ContactsList\n          deleteName={handleDeleteContact}\n          contacts={filteredContacts}\n        />\n      )}\n      {/* {!isName && <p>No contacts in list</p>} */}\n    </>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["name","number","onSubmit","useState","initialState","state","setState","handleChange","target","value","prevState","className","styles","e","preventDefault","type","pattern","title","onChange","required","ContactsList","deleteName","contact","contacts","map","id","onClick","defaultProps","getAllContacts","store","getFilteredContacts","filter","normalizedFilter","toLowerCase","includes","getFilter","filteredContacts","useSelector","allContacts","dispatch","useDispatch","isName","Boolean","length","normalizedName","result","find","isDublicate","alert","addContact","Filter","setFilter","deleteContact"],"sourceRoot":""}